import os
import smtplib
import tempfile
from email.message import EmailMessage
from typing import Dict, Any
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase import pdfmetrics
from reportlab.lib import colors

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π
pdfmetrics.registerFont(TTFont('DejaVuSans', 'DejaVuSans.ttf'))

def generate_pdf(order: Dict[str, Any]) -> str:
    tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".pdf")
    tmp_name = tmp.name
    tmp.close()

    doc = SimpleDocTemplate(tmp_name)
    styles = getSampleStyleSheet()
    styles.add(ParagraphStyle(name='Russian', fontName='DejaVuSans', fontSize=10, leading=12))
    styles.add(ParagraphStyle(name='Header', fontName='DejaVuSans', fontSize=16, alignment=1, spaceAfter=15))

    elements = []
    elements.append(Paragraph("–ó–∞–∫–∞–∑", styles['Header']))

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
    order_info = [
        ["–ú–µ–Ω–µ–¥–∂–µ—Ä:", order.get('manager', '')],
        ["–ö–ª–∏–µ–Ω—Ç:", order.get('client', '')],
        ["–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:", order.get('delivery_date', '')],
        ["–ê–¥—Ä–µ—Å:", order.get('delivery_address', '')],
        ["–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:", order.get('note', '')],
    ]
    info_table = Table(order_info, colWidths=[100, 400])
    info_table.setStyle(TableStyle([
        ('FONTNAME', (0, 0), (-1, -1), 'DejaVuSans'),
        ('FONTSIZE', (0, 0), (-1, -1), 10),
        ('ALIGN', (0, 0), (0, -1), 'RIGHT'),
        ('VALIGN', (0, 0), (-1, -1), 'TOP'),
        ('BOTTOMPADDING', (0, 0), (-1, -1), 4),
    ]))
    elements.append(info_table)
    elements.append(Spacer(1, 15))

    # –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å extra_code
    table_data = [["–ö–æ–¥", "–¢–æ–≤–∞—Ä", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–æ–ª-–≤–æ", "–ë–µ–∑ PVN", "C PVN", "–°—É–º–º–∞(‚Ç¨)"]]
    total_sum = 0
    for item in order.get('products', []):
        extra_code = item.get('extra_code', '')

        # –°—á–∏—Ç–∞–µ–º —Å—É–º–º—É —Å –ù–î–°
        try:
            sum_with_vat = float(item.get('price_with_vat', 0)) * int(item.get('qty', 0))
        except ValueError:
            sum_with_vat = 0

        item['sum_with_vat'] = sum_with_vat
        total_sum += sum_with_vat

        table_data.append([
            item.get('code', 'N/A'),
            extra_code,
            item.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'),
            item.get('qty', 0),
            item.get('price_no_vat', ''),
            item.get('price_with_vat', ''),
            f"{sum_with_vat:.2f}"
        ])

    product_table = Table(table_data, colWidths=[90, 40, 300, 30, 35, 35, 40])
    product_table.setStyle(TableStyle([
        ('FONTNAME', (0, 0), (-1, -1), 'DejaVuSans'),
        ('FONTSIZE', (0, 0), (-1, -1), 9),
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#4A90E2')),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
        ('ALIGN', (3, 1), (-1, -1), 'CENTER'),
        ('GRID', (0, 0), (-1, -1), 0.5, colors.grey),
        ('ROWBACKGROUNDS', (0, 1), (-1, -1), [colors.whitesmoke, colors.lightgrey])
    ]))
    elements.append(product_table)
    elements.append(Spacer(1, 15))

    elements.append(Paragraph(f"<b>–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</b> {total_sum:.2f} ‚Ç¨", styles['Russian']))

    doc.build(elements)
    return tmp_name


def send_email_with_pdf(order: Dict[str, Any], sender: str, password: str, recipient: str):
    pdf_path = None
    try:
        pdf_path = generate_pdf(order)

        msg = EmailMessage()
        msg['Subject'] = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç {order.get('manager','')}"
        msg['From'] = sender
        msg['To'] = recipient

        # –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
        plain_lines = [
            "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!",
            f"–ú–µ–Ω–µ–¥–∂–µ—Ä: {order.get('manager','')}",
            f"–ö–ª–∏–µ–Ω—Ç: {order.get('client','')}",
            f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {order.get('delivery_date','')}",
            f"–ê–¥—Ä–µ—Å: {order.get('delivery_address','')}",
            f"–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {order.get('note','')}",
            "",
            "–¢–æ–≤–∞—Ä—ã:"
        ]
        for p in order.get('products', []):
            plain_lines.append(f"{p.get('code','N/A')} | {p.get('extra_code','')} | {p.get('name','')[:45]:45} | {p.get('qty',0)}")
        msg.set_content("\n".join(plain_lines))

        # HTML –≤–µ—Ä—Å–∏—è
        product_rows = "".join(
            f"<tr><td>{p.get('code','N/A')}</td><td>{p.get('extra_code','')}</td><td>{p.get('name','')}</td><td style='text-align:center'>{p.get('qty',0)}</td></tr>"
            for p in order.get('products', [])
        )
        html = f"""
        <html>
          <body>
            <h2>üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ {order.get('manager','')}</h2>
            <p><strong>–ö–ª–∏–µ–Ω—Ç:</strong> {order.get('client','')}<br>
               <strong>–ê–¥—Ä–µ—Å:</strong> {order.get('delivery_address','')}<br>
               <strong>–î–∞—Ç–∞:</strong> {order.get('delivery_date','')}<br>
               <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> {order.get('note','')}</p>
            <h3>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</h3>
            <table border="1" cellpadding="6" cellspacing="0" style="border-collapse: collapse;">
              <tr style="background:#f2f2f2;"><th>–ö–æ–¥</th><th>–¢–æ–≤–∞—Ä</th><th>–ù–∞–∑–≤–∞–Ω–∏–µ</th><th>–ö–æ–ª-–≤–æ</th></tr>
              {product_rows}
            </table>
          </body>
        </html>
        """
        msg.add_alternative(html, subtype="html")

        # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º PDF
        with open(pdf_path, "rb") as f:
            msg.add_attachment(f.read(), maintype="application", subtype="pdf", filename="order.pdf")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
            smtp.login(sender, password)
            smtp.send_message(msg)

        print("üì® Email —Å PDF –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:", e)
        raise
    finally:
        if pdf_path and os.path.exists(pdf_path):
            os.remove(pdf_path)
